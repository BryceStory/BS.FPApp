<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EMAccessTokenExpire" xml:space="preserve">
    <value>系统错误，请重新登录</value>
  </data>
  <data name="EMAccountPasswordError" xml:space="preserve">
    <value>账号或登录密码错误，你还有{0}次机会</value>
  </data>
  <data name="EMGoogleCodeBeUsed" xml:space="preserve">
    <value>请等待新的谷歌验证码生成</value>
  </data>
  <data name="EMGoogleCodeError" xml:space="preserve">
    <value>谷歌验证码错误，你还有{0}次机会</value>
  </data>
  <data name="EMLoginSMSCodeTry5Times" xml:space="preserve">
    <value>登录验证多次错误，请{0}分钟后再试</value>
  </data>
  <data name="EMNeedInputTag" xml:space="preserve">
    <value>请检查地址或输入正确的标签</value>
  </data>
  <data name="EMPasswordError" xml:space="preserve">
    <value>密码验证错误，你还有{0}次机会</value>
  </data>
  <data name="EMPasswordError5Times" xml:space="preserve">
    <value>验证次数超过限制，请{0}分钟后重试</value>
  </data>
  <data name="EMPasswordTry5Times" xml:space="preserve">
    <value>登录验证多次错误，请{0}分钟后再试或找回密码</value>
  </data>
  <data name="EMPINInputError" xml:space="preserve">
    <value>PIN码不正确，你还可以输入{0}次</value>
  </data>
  <data name="EMPINInputLimit" xml:space="preserve">
    <value>PIN码已被锁定，{0}分钟后自动解锁。</value>
  </data>
  <data name="EMRegisterVerifyLimit5Times" xml:space="preserve">
    <value>验证次数超过限制，请{0}分钟后重试</value>
  </data>
  <data name="EMSMSCodeError" xml:space="preserve">
    <value>短信验证码错误，你还有{0}次机会</value>
  </data>
  <data name="EMVerifyLimit5Times" xml:space="preserve">
    <value>验证次数超过限制，请{0}分钟后重试</value>
  </data>
  <data name="InvalidQRCode" xml:space="preserve">
    <value>无效二维码，请重新扫描</value>
  </data>
  <data name="SecurityValidateError" xml:space="preserve">
    <value>验证信息错误，你还有{0}次机会</value>
  </data>
  <data name="SMSLimit" xml:space="preserve">
    <value>发送验证码次数超出限制，请明日再试</value>
  </data>
  <data name="SMS_Template_FiiiPay" xml:space="preserve">
    <value>手机校验码：{0},如非本人请勿操作,{1}分钟之内有效 --FiiiPay</value>
  </data>
  <data name="GACodeError" xml:space="preserve">
    <value>谷歌验证码错误，请重新输入</value>
  </data>
  <data name="SMS_Template_POS" xml:space="preserve">
    <value>手机校验码：{0},如非本人请勿操作,{1}分钟之内有效 --FiiiPOS</value>
  </data>
  <data name="EMInvalidAddress" xml:space="preserve">
    <value>地址格式不合法</value>
  </data>
  <data name="EMInvalidTag" xml:space="preserve">
    <value>无效的地址标签</value>
  </data>
  <data name="EMIdentityNoError" xml:space="preserve">
    <value>证件号错误，你还有{0}次机会</value>
  </data>
  <data name="EMSMSCodeExpire" xml:space="preserve">
    <value>验证码已过期</value>
  </data>
  <data name="EMVerifyFaild" xml:space="preserve">
    <value>验证信息错误, 你还有{0}次机会</value>
  </data>
  <data name="EMVerifyFaildMoreTimes" xml:space="preserve">
    <value>验证次数超过限制，请{0}分钟后重试</value>
  </data>
  <data name="EmailVerfiyMessage" xml:space="preserve">
    <value>【FiiiPay】邮箱验证码：{0}，如非本人请勿操作，{1}分钟之内有效。</value>
  </data>
</root>