@{
    List<string> permissionCodeList = ViewBag.PagePermissions;
    var permobj = new GeneralPermission { Create = permissionCodeList.Contains("BORoleCreate"), Update = permissionCodeList.Contains("BORoleUpdate"), Delete = permissionCodeList.Contains("BORoleDelete") };
    var rolePerm = permissionCodeList.Contains("BORoleAuth");
    string sePermission = new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(permobj);
}
<div>
    <div class="gridSearchTool search-singlerow">
        <form class="form-inline" onkeypress="return ExecuteSearch()">
            <div class="form-group" style="width:300px;">
                <label style="width:60px;text-align:left;">Name</label>
                <input type="hidden" />
                <input type="text" id="RoleName" name="RoleName" class="form-control" />
            </div>
            <div class="form-group">
                <input type="button" class="btn btn-primary btn-sm" value="Search" onclick="DoSearch()" />
            </div>
        </form>
        @if (permobj.Create)
        {
            <a href="javascript:" class="btn btn-create" onclick="GoCreatePage()">Create</a>
        }
    </div>
    <table id="gridlist"></table>
    <div id="gridlistpager"></div>
</div>
<script>
    $(function () {
        var colname = ["Id", "Name", "Description"];
        var colmodel = [
            { name: 'Id', index: 'Id', hidden: true },
            { name: 'Name', index: 'Name', width: 100, align: 'center' },
            { name: 'Description', index: 'Description', width: 100, align: 'center' }
        ];
        if ("@rolePerm".toLowerCase() === "true") {
            colname.push("Authorize");
            colmodel.push({
                name: 'RolePermission', index: 'RolePermission', width: 50, align: 'center', sortable: false, formatter: function (cellvalue, options, rowdata) {
                    return '<a href="javascript:" class="btn btn-primary btn-xs" onclick="GoRolePermissionPage(\'' + rowdata.Id + '\')">Authorize</a>';;
                }
            });
        }
        $("#gridlist").BoGrid({
            url: '/BORole/LoadData',
            showBtn: true,
            permvalue: "@sePermission",
            colNames: colname,
            colModel: colmodel,
            onEditClick: "GoEditPage",
            onDeleteClick: "DeleteRole",
            pager: '#gridlistpager'
        });
    })
    function ExecuteSearch(e) {
        if (event.keyCode == 13) {
            DoSearch();
            return false;
        }
        return true;
    }
    function DoSearch() {
        $("#gridlist").jqGrid('setGridParam', { postData: GetSearchConditions(), page: 1 }).trigger("reloadGrid");
    }
    function GetSearchConditions() {
        var roleName = $.trim($("#RoleName").val());
        return { roleName: roleName };
    }
    function refreshPage() {
        $("#gridlist").jqGrid('setGridParam', { postData: GetSearchConditions() }).trigger("reloadGrid");
    }
    function GoEditPage(id) {
        $.openmodalpage("EditRolePage", "/BORole/Edit", { id: id }, "Edit Role");
    }
    function GoCreatePage() {
        $.openmodalpage("EditRolePage", "/BORole/Create", null, "Create Role");
    }
    function GoRolePermissionPage(id) {
        $.opentabpage("/BORole/RolePermission?roleId=" + id, "Authorize Role", id);
    }
    function DeleteRole(id) {
        $.swconfirm("Sure to delete this role？", function (isconfirm) {
            if (isconfirm) {
                $.ajax({
                    url: '/BORole/Delete',
                    data: { id: id },
                    dataType: "json",
                    success: function (context) {
                        if (context.Status) {
                            swal({
                                title: "Delete Success",
                                type: "success"
                            }, function () {
                                $("#gridlist").trigger('reloadGrid');
                            });
                        }
                        else {
                            swal({
                                title: "Delete Failed",
                                type: "error",
                                text: context.Message
                            });
                        }
                    }
                })
            }
        });
    }
    function SubmitEditRoleForm() {
        var vaild = $("#editRoleForm").valid();
        if (!vaild) {
            return false;
        }
        $.ajax({
            url: '/BORole/Save',
            data: $("#editRoleForm").serialize(),
            dataType: "json",
            success: function (context) {
                if (context.Status) {
                    swal({
                        title: "Save Success",
                        type: "success"
                    }, function () {
                        $.closemodalpage("EditRolePage");
                        $("#gridlist").trigger('reloadGrid');
                    });
                }
                else {
                    swal({
                        title: "Save Failed",
                        type: "error",
                        text: context.Message
                    });
                }
            }
        })
    }
</script>