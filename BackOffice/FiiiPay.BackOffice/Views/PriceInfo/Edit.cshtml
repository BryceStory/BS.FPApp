@using FiiiPay.BackOffice.Models;

@model PriceInfos
@{
    bool isAdd = Model.ID == -1;
}
<div class="pagebody" style="width:500px;">
    <form id="formEdit" class="form-horizontal">
        <div class="form-group">
            <label class="col-sm-3 control-label required" for="CryptoID">Crypto Code</label>
            <div class="col-sm-9">
                @Html.DropDownListFor(t => t.CryptoID, (List<SelectListItem>)ViewBag.CryptoList, new { Class = "form-control", placeholder = "Crypto" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label required" for="Currency">Currency</label>
            <div class="col-sm-9">
                @Html.DropDownListFor(t => t.CurrencyID, (List<SelectListItem>)ViewBag.CurrencyList, new { Class = "form-control", placeholder = "Currency" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label" for="Price">Price</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(t => t.Price, new { Class = "form-control", placeholder = "Price" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label" for="Markup">Markup</label>
            <div class="col-sm-8">
                @Html.TextBoxFor(t => t.Markup, new { Class = "form-control", placeholder = "Markup" })
            </div>
            <label class="control-label">
                %
            </label>
        </div>
        <div class="form-group">
            <div class="col-sm-10 col-sm-offset-2">
                <button type="button" class="btn btn-primary" onclick="Save(@Model.ID)">Submit</button>
            </div>
        </div>
    </form>
</div>
<script>
    $(function () {
        var validateRules = {
            Price: {
                required: true,
                number: true
            },
            Markup: {
                required: true,
                number: true,
                min: 0,
                max: 100
            }
        }
        $('#formEdit').jqValidate({
            errorElement: 'span',
            errorClass: 'help-inline',
            focusInvalid: true,
            rules: validateRules,
            messages: {
                Username: "This field is required.",
                Email: "Please enter a valid email."
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('info').addClass('has-error');
            },
            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('info');
                $(e).remove();
            }
        });
    });

    function Save(id) {
        var checkResult = $('#formEdit').valid();
        if (checkResult) {
            var postdata = getFromData(id);
            $.ajax({
                url: "/PriceInfo/Save",
                type: "post",
                data: postdata,
                dataType: "json",
                contentType: "application/json",
                success: function (context) {
                    if (context.Status) {
                        swal({
                            title: "Save Success",
                            text: context.Message,
                            type: "success"
                        });
                        $.closemodalpage("editPriceInfo");
                    }
                    else {
                        swal({
                            title: "Save Failed",
                            text: context.Message,
                            type: "error"
                        });
                    }
                }
            });
        }
    }

    function getFromData(id) {
        var priceinfo = new Object();
        priceinfo.ID = id;
        priceinfo.CryptoID = $("#CryptoID").children(":selected").val();
        priceinfo.CurrencyID = $("#CurrencyID").children(":selected").val();
        priceinfo.Price = $("#Price").val();
        priceinfo.Markup = $("#Markup").val() / 100;
        return JSON.stringify({ priceinfo: priceinfo });
    }
</script> 