@model FiiiPay.BackOffice.Models.Agent
<div class="pagebody" style="max-width:1150px;">
    <form class="form-horizontal" id="editAgentForm">
        @Html.HiddenFor(t => t.Id)
        @if (!string.IsNullOrEmpty(Model.AgentCode))
        {
            <div class="form-group">
                <label class="col-sm-2 control-label">Code</label>
                <div class="col-sm-6">
                    <div class="form-control noborder">@Model.AgentCode</div>
                </div>
            </div>
        }
        <div class="form-group">
            <label class="col-sm-2 control-label" for="CompanyName">Company</label>
            <div class="col-sm-6">
                @Html.TextBoxFor(t => t.CompanyName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for="ContactName">Contact</label>
            <div class="col-sm-6">
                @Html.TextBoxFor(t => t.ContactName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for="ContactWay">Contact method</label>
            <div class="col-sm-6">
                @Html.TextBoxFor(t => t.ContactWay, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for="Name">Seller</label>
            <div class="col-sm-6">
                @Html.DropDownListFor(t => t.SaleId, (List<SelectListItem>)ViewBag.SellerList, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label" for="Name">Area</label>
            <div class="col-sm-10">
                @Html.DropDownListFor(t=>t.CountryId, (List<SelectListItem>)ViewBag.CountryList, new { @class = "form-control", style = "display:inline-block;width:160px;" })
                @Html.DropDownListFor(t => t.StateId, (List<SelectListItem>)ViewBag.StateList, new { @class = "form-control", style = "display:inline-block;width:160px;" })
                @Html.DropDownListFor(t => t.CityId, (List<SelectListItem>)ViewBag.CityList, new { @class = "form-control", style = "display:inline-block;width:160px;" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-10 col-sm-offset-2">
                <input type="button" class="btn btn-primary" onclick="SubmitAgentForm()" value="Submit" />
            </div>
        </div>
    </form>
</div>
<script>
    $(function () {
        $("#editAgentForm").jqValidate({
            rules: {
                CompanyName: { required:true, maxlength:200},
                ContactName: { maxlength: 100 },
                ContactWay: { maxlength: 50 },
                SaleId: { required: false },
                CountryId: { required: false },
                StateId: { required: false },
                CityId: { required: false }
            }
        });
        $("#CountryId").on("change", function () {
            var $select = $(this);
            var $stateselect = $("#StateId");
            var countryId = $select.children(":selected").val();
            $("#CityId").empty().append('<option>Select city</option>');
            $stateselect.empty().append('<option>Select state</option>');
            if (!countryId) {
                return;
            }
            $.get("/Agent/GetStateList", { countryId: countryId }, function (context) {
                if (context) {
                    var liststr = '';
                    for (var i = 0; i < context.length; i++) {
                        liststr += '<option value="' + context[i].Id + '">' + context[i].Name + '</option>';
                    }
                    $stateselect.append(liststr);
                }
            })
        });
        $("#StateId").on("change", function () {
            var $select = $(this);
            var $cityselect = $("#CityId");
            var stateId = $select.children(":selected").val();
            $cityselect.empty().append('<option>Select city</option>');
            if (!stateId) {
                return;
            }
            $.get("/Agent/GetCityList", { stateId: stateId }, function (context) {
                if (context) {
                    var liststr = '';
                    for (var i = 0; i < context.length; i++) {
                        liststr += '<option value="' + context[i].Id + '">' + context[i].Name + '</option>';
                    }
                    $cityselect.append(liststr);
                }
            })
        });
    })
    function SubmitAgentForm() {
        var vaild = $("#editAgentForm").valid();
        if (!vaild) {
            return false;
        }
        $.ajax({
            url: '/Agent/Save',
            data: $("#editAgentForm").serialize(),
            dataType: "json",
            success: function (context) {
                if (context.Status) {
                    swal({
                        title: "Save Success",
                        type: "success"
                    });
                }
                else {
                    swal({
                        title: "Save Failed",
                        type: "error",
                        text: context.Message
                    });
                }
            }
        })
    }
</script>