@using FiiiPay.BackOffice.Models;
@model InvestorAccounts
@{
    bool isAdd = (Model.Id == -1);
}
<div class="pagebody" style="width:500px;">
    <form id="formEditInvestor" class="form-horizontal">
        <div class="form-group">
            <label class="col-sm-3 control-label" for="Username">Username</label>
            @if (Model.Id == -1)
            {
                <div class="col-sm-9">
                    @Html.TextBoxFor(t => t.Username, new { Class = "form-control", placeholder = "Username" })
                </div>
            }
            else
            {
                <div class="col-sm-9">
                    <label class="control-label" for="Username" id="Username">@Model.Username</label>
                </div>
            }
        </div>
        @if (Model.Id == -1)
        {
            <div class="form-group">
                <label class="col-sm-3 control-label required" for="Password">Password</label>
                <div class="col-sm-9">
                    @Html.PasswordFor(t => t.Password, new { Class = "form-control", placeholder = "Password" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label required" for="PIN">PIN</label>
                <div class="col-sm-9">
                    @Html.PasswordFor(t => t.PIN, new { Class = "form-control", placeholder = "PIN" })
                </div>
            </div>
        }
        <div class="form-group">
            <label class="col-sm-3 control-label" for="InvestorName">InvestorName</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(t => t.InvestorName, new { Class = "form-control", placeholder = "InvestorName" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label" for="Cellphone">Cellphone</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(t => t.Cellphone, new { Class = "form-control", placeholder = "Cellphone" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-3 control-label required" for="Status">Status:</label>
            <div class="col-sm-9">
                @Html.DropDownListFor(t => t.Status, (List<SelectListItem>)ViewBag.StatusList, new { Class = "form-control", placeholder = "Status" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-10 col-sm-offset-2">
                <button type="button" class="btn btn-primary" onclick="SaveInvestor(@Model.Id)">Submit</button>
            </div>
        </div>
    </form>
</div>
<script>
    $(function () {
        var validateRules = {
            Username: "required",
            Password: "required",
            PIN: "required",
            InvestorName: "required",
            Cellphone: "required"
        }
        if ("@Model.Id" < 0) {
            validateRules.Password = { required: true, rangelength: [6, 16]};
        }
        $('#formEditInvestor').jqValidate({
            errorElement: 'span',
            errorClass: 'help-inline',
            focusInvalid: true,
            rules: validateRules,
            messages: {
                Username: "This field is required.",
                Password: "This field is required.",
                PIN: "This field is required.",
                InvestorName: "This field is required.",
                Cellphone: "This field is required."
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('info').addClass('has-error');
            },
            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('info');
                $(e).remove();
            }
        });
    });

    function SaveInvestor(id) {
        var checkResult = $('#formEditInvestor').valid();
        if (checkResult) {
            var postdata = getFromData(id);
            $.ajax({
                url: "/InvestorManage/Save",
                type: "post",
                data: postdata,
                dataType: "json",
                contentType: "application/json",
                success: function (context) {
                    if (context.Status) {
                        $.closemodalpage("editInvestorpage");
                    }
                    else {
                        swal({
                            title: "Save Failed",
                            text: context.Message,
                            type: "error"
                        });
                    }
                }
            });
        }
    }

    function getFromData(id) {
        var investor = new Object();
        investor.Id = id;
        investor.Username = $("#Username").val() == "" ? $("#Username").html() : $("#Username").val();
        investor.Password = $("#Password").val();
        investor.PIN = $("#PIN").val();
        investor.InvestorName = $("#InvestorName").val();
        investor.Cellphone = $("#Cellphone").val();
        investor.Status = $("#Status").val();
        return JSON.stringify({ oInvestor: investor });
    }
</script> 