@{
    List<string> permissionCodeList = ViewBag.PagePermissions;
    var canSet = permissionCodeList.Contains("UserSet");
    var canResetPwd = permissionCodeList.Contains("ResetUserPassword");
    var canReward = permissionCodeList.Contains("RewardUser");
    var viewUserAccount = permissionCodeList.Contains("UserAccountView");
}
<div class="gridSearchTool">
    <form class="form-inline" onkeypress="return ExecuteSearch()">
        <div class="form-group">
            <label>Account</label>
            <input type="text" id="SearchAccount" class="form-control" />
        </div>
        <div class="form-group">
            <label>Country</label>
            @Html.DropDownList("SearchCountryId", (List<SelectListItem>)ViewBag.CountryList, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Status</label>
            @Html.DropDownList("SearchStatus", (List<SelectListItem>)ViewBag.StatusList, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <input type="button" class="btn btn-primary btn-sm" value="Search" onclick="DoSearch()" />
        </div>
    </form>
</div>
<table id="gridlist"></table>
<div id="gridlistpager"></div>

<script>
    $(function () {
        var colname = ["Id", "AccountNo", "CountryName", "ProfileVerify", "AddressVerify", "IsAllowWithdrawal", "IsAllowAccept", "Status", "RegisterDate", "LastLoginDate", "Options"];
        var colmodel = [
            { name: 'Id', index: 'Id', hidden: true },
            { name: 'AccountNo', index: 'AccountNo', align: 'center', width: 60 },
            { name: 'CountryName', index: 'CountryName', align: 'center', width: 60 },
            { name: 'ProfileVerify', index: 'ProfileVerify', width: 40, align: 'center', sortable: false },
            { name: 'AddressVerify', index: 'AddressVerify', width: 40, align: 'center', sortable: false },
            { name: 'IsAllowWithdrawal', index: 'IsAllowWithdrawal', width: 60, align: 'center', sortable: false },
            { name: 'IsAllowAccept', index: 'IsAllowAccept', width: 60, align: 'center' },
            { name: 'Status', index: 'Status', width: 60, align: 'center' },
            { name: 'RegisterDate', index: 'RegisterDate', width: 60, align: 'center' },
            { name: 'LastLoginDate', index: 'LastLoginDate', width: 60, align: 'center' },
            {
                name: 'Options',
                index: 'Options',
                width: 100,
                align: 'center',
                sortable: false,
                formatter: function (cellvalue, rowdata) {
                    var id = rowdata.rowId;
                    var htmlstr = '';
                    htmlstr +=
                        '<input type="button" class="btn btn-primary btn-xs" value="View" onclick="GoDetailPage(\'' +
                        id +
                        '\')" />';
                    if ("@canSet".toLowerCase() === "true") {
                        htmlstr +=
                            '<input type="button" class="btn btn-primary btn-xs" value="Set" onclick="GoSetPage(\'' +
                            id +
                            '\')" style="margin-left:5px;" />';
                    }
                    if ("@canReward".toLowerCase() === "true") {
                        htmlstr +=
                            '<input type="button" class="btn btn-primary btn-xs" value="Reward" onclick="Reward(\'' +
                            id +
                            '\')" style="margin-left:5px;" />';
                    }
                    return htmlstr;
                }
            }
        ];
        if ("@viewUserAccount".toLowerCase() === "true") {
            colname.push("UserAccount");
            colmodel.push({
                name: 'UserAccount', index: 'UserAccount', width: 60, align: 'center', hideinxs: true, sortable: false, formatter: function (cellvalue, options, rowdata) {
                    return '<a href="javascript:" onclick="GoUserAccountPage(\'' + rowdata.Id + '\')">UserAccount</a>';
                }
            });
        }
        if ("@canResetPwd".toLowerCase() == "true") {
            colmodel.push({
                name: 'Reset Password', index: 'ResetPassword', align: 'center', width: 100, sortable: false, formatter: function (cellvalue, options, rowdata) {
                    return '<a href="javascript:" class="btn btn-primary btn-xs" onclick="ResetPassword(\'' + rowdata.Id + '\',\'Password\')">Reset Password</a> ' + ' <a href="javascript:" class="btn btn-primary btn-xs" onclick="ResetPassword(\'' + rowdata.Id + '\',\'PIN\')">Reset PIN</a>';
                }
            });
            colname.push("ResetPassword");
        }

        $("#gridlist").BoGrid({
            url: '/UserManage/LoadData',
            ExpandColumn: 'PageName',
            colNames: colname,
            colModel: colmodel,
            postData: GetSearchConditions(),
            pager: '#gridlistpager'
        });
    });

    function ExecuteSearch(e) {
        if (event.keyCode == 13) {
            DoSearch();
            return false;
        }
        return true;
    }
    function DoSearch() {
        $("#gridlist").jqGrid('setGridParam', { postData: GetSearchConditions(), page: 1 }).trigger("reloadGrid");
    }
    function GetSearchConditions() {
        var countryId = $("#SearchCountryId").children(":selected").val();
        var account = $.trim($("#SearchAccount").val());
        var status = $("#SearchStatus").children(":selected").val();
        return { cellphone: account, countryId: countryId, status: status };
    }
    function refreshPage() {
        $("#gridlist").jqGrid('setGridParam', { postData: GetSearchConditions() }).trigger("reloadGrid");
    }
    function GoSetPage(id) {
        $.openmodalpage("setuserprofile", "/UserManage/UserSet", { id: id }, "User Set", "", function () {
            $("#gridlist").trigger('reloadGrid');
        });
    }
    function GoDetailPage(id) {
        $.opentabpage("/UserManage/Detail?id=" + id, "User Profile Detail", "viewuserdetail" + id);
    }

    function ResetPassword(id, type) {
        $.openmodalpage("resetUserPasswordpage", "/UserManage/ResetPassword", { Id: id, Type: type }, "Reset " + type, "");
    }
    function GoUserAccountPage(id) {
        $.opentabpage("/UserManage/UserAccount?id=" + id, "User Account Info", id);
    }

    function Reward(id) {
        $.swconfirm("Are your sure to reward this user?", function (isconfirm) {
            if (isconfirm) {
                $.ajax({
                    url: "/UserManage/Reward",
                    type: "post",
                    data: { id: id },
                    dataType: "json",
                    success: function (context) {
                        if (context.Status) {
                            swal({
                                title: "Reward Success",
                                text: context.Message,
                                type: "success"
                            });
                        }
                        else {
                            swal({
                                title: "Delete Failed",
                                text: context.Message,
                                type: "error"
                            });
                        }
                    }
                });
            }
        });
    }
</script>